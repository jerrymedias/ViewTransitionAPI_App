{"ast":null,"code":"var _jsxFileName = \"/Users/ravirajsingh/ViewTransitionApp/src/components/Loader/Loader.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_SPAN = 6;\nfunction Loader({\n  config,\n  isComponent,\n  wrappedInCol,\n  passedAsProps = false\n}) {\n  const skeletonContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isComponent ? \"\" : \"container-fluid-padded\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flexColumn\",\n      children: getBlocks(config || [], wrappedInCol)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n\n  // react-loadable-visibility adds a div around fallbacks on the client. So we also need to wrap fallbacks with a div on sever.\n  // When we pass fallbacks as an option while importing the widgets the library handles this for us, but when we give fallbacks AS PROPS we need to add this div around fallbacks manually on the SERVER ONLY.\n  if (passedAsProps) {\n    if (typeof window !== \"undefined\") return skeletonContent;else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: skeletonContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this);\n  } else return skeletonContent;\n}\n_c = Loader;\nfunction getBlocks(config, wrappedInCol) {\n  let blocks = [];\n  let index = 0;\n  for (let row of config) {\n    const {\n      height,\n      classes = \"\",\n      columns = []\n    } = row;\n    /*\n     * If row has a span, give it first preference\n     * Else if no child columns are present, default to MAX_SPAN\n     */\n    const span = row.span || !columns.length && MAX_SPAN;\n    /**\n     * The prop \"wrappedInCol\" is used for the cases where component is already wrapped in \"col\" class\n     */\n    const spanClass = span && !wrappedInCol ? `col-${span}` : \"\";\n    if (columns.length) {\n      blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${classes} ${spanClass}`,\n        style: {\n          height: height\n        },\n        children: getColumns(columns)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this));\n    } else blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes} ${spanClass} shimmer`,\n      style: {\n        height: height\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this));\n    ++index;\n  }\n  return blocks;\n}\nfunction getColumns(columns) {\n  let blocks = [];\n  let index = 0;\n  for (let column of columns) {\n    const {\n      span,\n      height,\n      classes,\n      rows = []\n    } = column;\n    let colSpanClass = `col-${span}`;\n    if (!span) {\n      colSpanClass = \"\";\n    }\n    if (rows.length) {\n      blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes ? classes : \"flex flexColumn\"} ${colSpanClass}`,\n        style: {\n          height: height\n        },\n        children: getRows(rows)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this));\n    } else blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes ? classes : \"\"} ${colSpanClass} shimmer`,\n      style: {\n        height: height\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this));\n    ++index;\n  }\n  return blocks;\n}\nfunction getRows(rows) {\n  let blocks = [];\n  let index = 0;\n  for (let row of rows) {\n    const {\n      span,\n      height,\n      classes = \"\"\n    } = row;\n    const rowSpanClass = span ? `col-${span}` : \"\";\n    blocks.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes} ${rowSpanClass} shimmer`,\n      style: {\n        height: height\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this));\n    ++index;\n  }\n  return blocks;\n}\nLoader.propTypes = {\n  config: PropTypes.array.isRequired,\n  isComponent: PropTypes.bool,\n  wrappedInCol: PropTypes.bool,\n  passedAsProps: PropTypes.bool\n};\nexport default Loader;\nvar _c;\n$RefreshReg$(_c, \"Loader\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","MAX_SPAN","Loader","config","isComponent","wrappedInCol","passedAsProps","skeletonContent","className","children","getBlocks","fileName","_jsxFileName","lineNumber","columnNumber","window","_c","blocks","index","row","height","classes","columns","span","length","spanClass","push","style","getColumns","column","rows","colSpanClass","getRows","rowSpanClass","propTypes","array","isRequired","bool","$RefreshReg$"],"sources":["/Users/ravirajsingh/ViewTransitionApp/src/components/Loader/Loader.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst MAX_SPAN = 6\n\nfunction Loader({ config, isComponent, wrappedInCol, passedAsProps = false }) {\n    const skeletonContent = (\n        <div className={isComponent ? \"\" : \"container-fluid-padded\"}>\n            <div className=\"flex flexColumn\">{getBlocks(config || [], wrappedInCol)}</div>\n        </div>\n    )\n\n    // react-loadable-visibility adds a div around fallbacks on the client. So we also need to wrap fallbacks with a div on sever.\n    // When we pass fallbacks as an option while importing the widgets the library handles this for us, but when we give fallbacks AS PROPS we need to add this div around fallbacks manually on the SERVER ONLY.\n    if (passedAsProps) {\n        if (typeof window !== \"undefined\") return skeletonContent\n        else return <div>{skeletonContent}</div>\n    } else return skeletonContent\n}\n\nfunction getBlocks(config, wrappedInCol) {\n    let blocks = []\n    let index = 0\n    for (let row of config) {\n        const { height, classes = \"\", columns = [] } = row\n        /*\n         * If row has a span, give it first preference\n         * Else if no child columns are present, default to MAX_SPAN\n         */\n        const span = row.span || (!columns.length && MAX_SPAN)\n        /**\n         * The prop \"wrappedInCol\" is used for the cases where component is already wrapped in \"col\" class\n         */\n        const spanClass = span && !wrappedInCol ? `col-${span}` : \"\"\n        if (columns.length) {\n            blocks.push(\n                <div key={index} className={`flex ${classes} ${spanClass}`} style={{ height: height }}>\n                    {getColumns(columns)}\n                </div>\n            )\n        } else\n            blocks.push(\n                <div key={index} className={`${classes} ${spanClass} shimmer`} style={{ height: height }} />\n            )\n        ++index\n    }\n    return blocks\n}\n\nfunction getColumns(columns) {\n    let blocks = []\n    let index = 0\n    for (let column of columns) {\n        const { span, height, classes, rows = [] } = column\n        let colSpanClass = `col-${span}`\n        if (!span) {\n          colSpanClass = \"\"\n        }\n        if (rows.length) {\n            blocks.push(\n                <div\n                    key={index}\n                    className={`${classes ? classes : \"flex flexColumn\"} ${colSpanClass}`}\n                    style={{ height: height }}\n                >\n                    {getRows(rows)}\n                </div>\n            )\n        } else\n            blocks.push(\n                <div\n                    key={index}\n                    className={`${classes ? classes : \"\"} ${colSpanClass} shimmer`}\n                    style={{ height: height }}\n                />\n            )\n        ++index\n    }\n    return blocks\n}\n\nfunction getRows(rows) {\n    let blocks = []\n    let index = 0\n    for (let row of rows) {\n        const { span, height, classes = \"\" } = row\n        const rowSpanClass = span ? `col-${span}` : \"\"\n        blocks.push(\n            <div key={index} className={`${classes} ${rowSpanClass} shimmer`} style={{ height: height }} />\n        )\n        ++index\n    }\n    return blocks\n}\n\nLoader.propTypes = {\n    config: PropTypes.array.isRequired,\n    isComponent: PropTypes.bool,\n    wrappedInCol: PropTypes.bool,\n    passedAsProps: PropTypes.bool,\n}\n\nexport default Loader\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}